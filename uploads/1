import numpy, random, time, multiprocessing, os
def fun():
    def randarray(x, y):
        arr = []
        for i in range(y):
            arr.append([random.randint(691894090, 921043892130849374) for i in range(x)])
        return arr
    def benchmark(length, strength):
        t1 = time.time()
        i = 0
        while True:
            arr1 = numpy.array(randarray(strength, strength))
            arr2 = numpy.array(randarray(strength, strength))
            for i in range(10):
                arr1 * arr2
            if time.time() - t1 >= length:
                break
            i += 1
        return i
    result = benchmark(300, 1200)
    with open('results.txt', 'r+') as f:
        lines = f.read()
        f.close()
    with open('results.txt', 'w') as f:
        f.writelines(lines + f'\n{result}')
        f.close()
if __name__ == '__main__':
    with open('results.txt', 'r+') as f:
        f.truncate(0)
    processes = []
    for i in range(os.cpu_count()):
        p = multiprocessing.Process(target=fun)
        p.start()
        processes.append(p)
    done = 0
    i = 0
    while done != os.cpu_count():
        for i in processes:
            if not i.is_alive():
                done += 1
        i += 1
    time.sleep(2)
    with open('results.txt', 'r') as f:
        result = sum([int(i.replace('\n', '')) for i in f.readlines()[1:]])
    print(result)
